// D√©finition de toutes les actions de combat avec leurs conditions de d√©blocage

export const COMBAT_ACTIONS = {
    // ATTAQUES - Toujours disponibles de base
    ATTACK_BASE: {
        category: 'attack',
        name: 'Attaque Standard',
        description: 'Attaque de base sans co√ªt',
        energyCost: 0,
        unlockLevel: 1,
        icon: '‚öîÔ∏è'
    },
    ATTACK_SPECIAL: {
        category: 'attack',
        name: 'Attaque Sp√©ciale',
        description: 'Attaque puissante unique √† votre Mante',
        energyCost: 'variable', // D√©pend de la Mante
        unlockLevel: 1,
        icon: 'üí´'
    },

    // ATTAQUES AVANC√âES - Niveau 2+
    ATTACK_PRECISE: {
        category: 'attack',
        name: 'Frappe Pr√©cise',
        description: '+3 Toucher, -20% D√©g√¢ts',
        energyCost: 5,
        unlockLevel: 2,
        icon: 'üéØ'
    },
    ATTACK_HEAVY: {
        category: 'attack',
        name: 'Frappe Lourde',
        description: '-2 Toucher, +50% D√©g√¢ts',
        energyCost: 10,
        unlockLevel: 2,
        icon: 'üî®'
    },

    // ATTAQUES EXPERTES - Niveau 3+
    ATTACK_BURST: {
        category: 'attack',
        name: 'Salve Rapide',
        description: '3 attaques rapides √† -30% d√©g√¢ts chacune',
        energyCost: 15,
        unlockLevel: 3,
        icon: 'üî´'
    },
    ATTACK_EXECUTE: {
        category: 'attack',
        name: 'Ex√©cution',
        description: 'x3 d√©g√¢ts si ennemi < 30% PV',
        energyCost: 25,
        unlockLevel: 4,
        icon: 'üíÄ'
    },

    // TACTIQUES - Disponibles de base
    DEFEND: {
        category: 'tactical',
        name: 'D√©fense',
        description: '+5 D√©fense pour 1 tour',
        energyCost: 0,
        unlockLevel: 1,
        icon: 'üõ°Ô∏è'
    },
    SCAN: {
        category: 'tactical',
        name: 'Scan',
        description: 'Analyse l\'ennemi',
        energyCost: 0,
        unlockLevel: 1,
        icon: 'üì°'
    },

    // TACTIQUES AVANC√âES - Niveau 2+
    EVADE: {
        category: 'tactical',
        name: '√âvasion',
        description: '+3 Esquive pour 1 tour',
        energyCost: 10,
        unlockLevel: 2,
        icon: 'üí®'
    },
    COUNTER: {
        category: 'tactical',
        name: 'Contre-Attaque',
        description: 'Riposte automatique si touch√©',
        energyCost: 12,
        unlockLevel: 3,
        icon: 'üîÑ'
    },

    // SP√âCIALES - Niveau 2+
    OVERCHARGE: {
        category: 'special',
        name: 'Surcharge',
        description: '+50% D√©g√¢ts pour 2 tours',
        energyCost: 20,
        unlockLevel: 2,
        icon: '‚ö°'
    },
    REPAIR: {
        category: 'special',
        name: 'R√©paration',
        description: 'Soigne la Mante (Int √ó 5 PV)',
        energyCost: 15,
        unlockLevel: 2,
        icon: 'üîß'
    },

    // SP√âCIALES EXPERTES - Niveau 3+
    SHIELD_REGENERATE: {
        category: 'special',
        name: 'Bouclier d\'Urgence',
        description: 'Absorbe 50 d√©g√¢ts pour 1 tour',
        energyCost: 30,
        unlockLevel: 3,
        icon: 'üî∞'
    },
    ENERGY_DRAIN: {
        category: 'special',
        name: 'Drain √ânerg√©tique',
        description: 'Vol d\'√©nergie de l\'ennemi',
        energyCost: 10,
        unlockLevel: 4,
        icon: 'üåÄ'
    },

    // ULTIME - Niveau 5
    SYNCHRONIZATION_ULTIMATE: {
        category: 'ultimate',
        name: 'Synchronisation Ultime',
        description: 'x5 d√©g√¢ts, consomme toute l\'√©nergie',
        energyCost: 50,
        unlockLevel: 5,
        icon: '‚ú®'
    }
};

// Grouper les actions par cat√©gorie
export const COMBAT_ACTIONS_BY_CATEGORY = {
    attack: ['ATTACK_BASE', 'ATTACK_SPECIAL', 'ATTACK_PRECISE', 'ATTACK_HEAVY', 'ATTACK_BURST', 'ATTACK_EXECUTE'],
    tactical: ['DEFEND', 'SCAN', 'EVADE', 'COUNTER'],
    special: ['OVERCHARGE', 'REPAIR', 'SHIELD_REGENERATE', 'ENERGY_DRAIN'],
    ultimate: ['SYNCHRONIZATION_ULTIMATE']
};

// Fonction pour v√©rifier si une action est d√©bloqu√©e
export function isActionUnlocked(actionKey, playerLevel) {
    const action = COMBAT_ACTIONS[actionKey];
    return action && playerLevel >= action.unlockLevel;
}

// Fonction pour obtenir toutes les actions d√©bloqu√©es
export function getUnlockedActions(playerLevel) {
    return Object.keys(COMBAT_ACTIONS).filter(key =>
        isActionUnlocked(key, playerLevel)
    );
}

// Fonction pour obtenir les actions par cat√©gorie d√©bloqu√©es
export function getUnlockedActionsByCategory(category, playerLevel) {
    return COMBAT_ACTIONS_BY_CATEGORY[category].filter(key =>
        isActionUnlocked(key, playerLevel)
    );
}


